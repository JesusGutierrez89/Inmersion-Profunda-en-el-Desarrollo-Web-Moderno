// Ejercicio 1.4 - Full Stack Open Helsinki
// Refactoring with objects for course parts

const App = () => {
  const course = 'Half Stack application development'
  const part1 = {
    name: 'Fundamentals of React',
    exercises: 10
  }
  const part2 = {
    name: 'Using props to pass data',
    exercises: 7
  }
  const part3 = {
    name: 'State of a component',
    exercises: 14
  }

  return (
    <div>
      <Header course={course} />
      <Content 
        part1={part1} 
        part2={part2} 
        part3={part3} 
      />
      <Total 
        part1={part1} 
        part2={part2} 
        part3={part3} 
      />
    </div>
  )
}

const Header = (props) => {
  return <h1>{props.course}</h1>
}

const Content = (props) => {
  return (
    <div>
      <Part part={props.part1} />
      <Part part={props.part2} />
      <Part part={props.part3} />
    </div>
  )
}

const Part = (props) => {
  return (
    <p>
      {props.part.name} {props.part.exercises}
    </p>
  )
}

const Total = (props) => {
  const totalExercises = props.part1.exercises + props.part2.exercises + props.part3.exercises
  
  return (
    <p>
      Number of exercises: {totalExercises}
    </p>
  )
}

export default App

/* 
EXERCISE 1.4 SUMMARY:
- Refactored course parts to use objects instead of separate variables
- Each part now has 'name' and 'exercises' properties
- Updated all components to work with object structure
- Part component now accesses props.part.name and props.part.exercises
- Total component calculates sum from object properties
- This structure is more scalable and follows React best practices

WHAT CHANGED FROM 1.1-1.2:
- part1, part2, part3 are now objects with {name, exercises} structure
- Updated prop passing to pass entire objects
- Modified Part component to handle object props
- Enhanced Total component to work with object structure

COMPONENTS STRUCTURE:
App
├── Header (course)
├── Content (part1, part2, part3 objects)
│   ├── Part (part1 object)
│   ├── Part (part2 object)
│   └── Part (part3 object)
└── Total (part1, part2, part3 objects)
*/